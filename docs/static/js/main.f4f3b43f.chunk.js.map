{"version":3,"sources":["components/MovieComponent.js","components/MovieInfoComponent.js","App.js","index.js"],"names":["MovieContainer","styled","div","CoverImage","img","MovieName","span","InfoColumn","MovieInfo","MovieComponent","props","show","movie","poster","image","medium","onClick","onMovieSelect","id","src","alt","name","language","type","Container","Close","MovieInfoComponent","useState","movieInfo","setMovieInfo","selectedMovie","useEffect","axios","get","then","response","data","summary","Header","Logo","SearchBox","SearchIcon","SearchInput","input","MovieListContainer","App","searchQuery","updateSearchQuery","timeoutId","updateTimeoutId","movieList","updateMovieList","fetchData","searchString","a","placeholder","value","onChange","e","clearTimeout","target","timeout","setTimeout","length","map","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f4f3b43f.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst MovieContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  width: 280px;\n  box-shadow: 0 3px 10px 0 #aaa;\n  cursor: pointer;\n`;\n\nconst CoverImage = styled.img`\n  object-fit: cover;\n  height: 362px;\n`;\n\nconst MovieName = styled.span`\n  font-size: 18px;\n  font-weight: 600;\n  color: black;\n  margin: 15px 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n`;\n\nconst InfoColumn = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`;\n\nconst MovieInfo = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n  white-space: nowrap;\n  overflow: hidden;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n`;\n\nconst MovieComponent = (props) => {\n    //console.log (`estos son los props ${JSON.stringify(props)}`)\n    const { show } = props.movie;\n    let poster  = './blank.jpg'\n\n    if (show.image != null) {\n        poster = show.image.medium;\n    }\n\n    return(\n        <MovieContainer onClick={() => props.onMovieSelect(show.id)}>\n        <CoverImage \n            src={poster} alt={show.name}/>\n        <MovieName>{show.name}</MovieName>\n        <InfoColumn>\n            <MovieInfo>language: {show.language}</MovieInfo>\n            <MovieInfo>type: {show.type} </MovieInfo>\n            \n        </InfoColumn>\n    </MovieContainer>\n    );\n}\n\nexport default MovieComponent;","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 20px 30px;\n  justify-content: center;\n  border-bottom: 1px solid lightgray;\n`;\n\nconst InfoColumn = styled.div`\n  display: flex;\n  flex-direction: column;\n  margin: 20px;\n`;\n\nconst MovieName = styled.span`\n  font-size: 22px;\n  font-weight: 600;\n  color: black;\n  margin: 15px 0;\n  white-space: nowrap;\n  overflow: hidden;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n  & span {\n    opacity: 0.8;\n  }\n`;\nconst MovieInfo = styled.span`\n  font-size: 16px;\n  font-weight: 500;\n  color: black;\n  overflow: hidden;\n  margin: 4px 0;\n  text-transform: capitalize;\n  text-overflow: ellipsis;\n\n  & span {\n    opacity: 0.5;\n  }\n`;\n\nconst Close = styled.span`\n  font-size: 16px;\n  font-weight: 600;\n  color: black;\n  background: lightgray;\n  height: fit-content;\n  padding: 8px;\n  border-radius: 50%;\n  cursor: pointer;\n  opacity: 0.8;\n`;\n\nconst MovieInfoComponent = (props) => {\n    const [movieInfo, setMovieInfo] = useState();\n    const { selectedMovie } = props;\n\n    useEffect(() => {\n        axios\n        .get(`https://api.tvmaze.com/shows/${selectedMovie}`,\n        ).then((response) => setMovieInfo(response.data));\n      }, [selectedMovie]);\n\n  return <Container>\n    <InfoColumn> \n        <MovieName> Movie: {movieInfo?.name}</MovieName>\n        <MovieInfo>type:{movieInfo?.type}</MovieInfo>\n        <MovieInfo>language:{movieInfo?.language}</MovieInfo>\n        <MovieInfo>summary:{movieInfo?.summary}</MovieInfo>\n    </InfoColumn>\n    <Close>X</Close>\n  </Container> ;\n};\n\nexport default MovieInfoComponent;","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport MovieComponent from \"./components/MovieComponent\";\nimport axios from \"axios\";\nimport MovieInfoComponent from \"./components/MovieInfoComponent\";\n\n\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Header = styled.div`\n  background-color: darkslategrey;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  flex-direction: row;\n  align-items: center;\n  padding: 10px;\n  font-size: 25px;\n  font-weight: bold;\n  box-shadow: 0 3px 6px 0 #555;\n`;\n\nconst Logo = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n`;\n\nconst SearchBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px 10px;\n  border-radius: 6px;\n  margin-left: 20px;\n  width: 50%;\n  background-color: white;\n`;\n\nconst SearchIcon = styled.img`\n  width: 32px;\n  height: 32px;\n`;\n\nconst SearchInput = styled.input`\n  color: black;\n  font-size: 16px;\n  font-weight: bold;\n  border: none;\n  outline: none;\n  margin-left: 15px;\n`;\n\nconst MovieListContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  padding: 30px;\n  gap: 25px;\n  justify-content: space-evenly;\n`;\n\n\nfunction App() {\n\nconst [searchQuery, updateSearchQuery] = useState(\"\");\nconst [timeoutId, updateTimeoutId] = useState();\nconst [movieList, updateMovieList] = useState([]);\nconst [selectedMovie, onMovieSelect] = useState();\n  \nconst fetchData = async (searchString)=> {\n const response =  await axios.get(`https://api.tvmaze.com/search/shows?q=${searchString}`);\n  updateMovieList(response.data);\n}\n\nconst onTextChange = (e)=>{\n  clearTimeout(timeoutId);\n  updateSearchQuery(e.target.value);\n  const timeout = setTimeout(()=> fetchData(e.target.value), 500)\n  updateTimeoutId(timeout);\n}\n  return (\n  <Container> \n    <Header> \n      <Logo>Symplicit Movie App</Logo>\n      <SearchBox>\n        <SearchIcon src='/search-icon.svg'/>\n        <SearchInput\n            placeholder=\"Search Movie\"\n            value={searchQuery}\n            onChange={onTextChange}\n          />\n      </SearchBox>\n    </Header>\n    \n    {selectedMovie && <MovieInfoComponent selectedMovie={selectedMovie} />}\n\n    <MovieListContainer>\n      {\n        movieList?.length\n          ? movieList.map((movie, index)=>(\n            <MovieComponent \n              key={index} \n              movie={movie} \n              onMovieSelect={onMovieSelect}\n            />\n          )) \n        :\"No Found Movie\"\n      }\n    </MovieListContainer>\n  </Container>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}